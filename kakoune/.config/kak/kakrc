# Theme
colorscheme zenburn

# LSP
eval %sh{kak-lsp}
lsp-enable

# Mappings
map global user l ':enter-user-mode lsp<ret>' -docstring 'LSP mode'
map global user k ':lsp-hover<ret>' -docstring 'LSP hover'
map global insert <tab> '<a-;>:try lsp-snippets-select-next-placeholders catch %{ execute-keys -with-hooks <lt>tab> }<ret>' -docstring 'Select next snippet placeholder'
map global object a '<a-semicolon>lsp-object<ret>' -docstring 'LSP any symbol'
map global object <a-a> '<a-semicolon>lsp-object<ret>' -docstring 'LSP any symbol'
map global object f '<a-semicolon>lsp-object Function Method<ret>' -docstring 'LSP function or method'
map global object t '<a-semicolon>lsp-object Class Interface Struct<ret>' -docstring 'LSP class interface or struct'
map global object d '<a-semicolon>lsp-diagnostic-object --include-warnings<ret>' -docstring 'LSP errors and warnings'
map global object D '<a-semicolon>lsp-diagnostic-object<ret>' -docstring 'LSP errors'

declare-user-mode grep
map global user g ':enter-user-mode grep<ret>' -docstring 'grep mode'
map global grep [ '<a-;>:grep-previous-match<ret>' -docstring 'grep previous match'
map global grep ] '<a-;>:grep-next-match<ret>' -docstring 'grep next match'

declare-user-mode make
map global user m ':enter-user-mode make<ret>' -docstring 'make mode'
map global make <ret> '<a-;>:make<ret>' -docstring 'make'
map global make <space> '<a-;>:make ' -docstring 'make with args'
map global make ? '<a-;>:echo %opt{makecmd}<ret>' -docstring 'make view command'
map global make [ '<a-;>:make-previous-error<ret>' -docstring 'make previous error'
map global make ] '<a-;>:make-next-error<ret>' -docstring 'make next error'

# Options
set-option global tabstop 4
set-option global indentwidth 4
set-option global scrolloff 1,3
set-option -add global ui_options terminal_assistant=none
add-highlighter global/ number-lines -relative
# add-highlighter global/ regex \h+$ 0:Error

# Plugins
source "%val{config}/smarttab.kak"
hook global BufOpenFile .* %{
    editorconfig-load
    autoconfigtab
}
hook global BufNewFile .* %{
    editorconfig-load
    autoconfigtab
}

# Hooks
hook global WinCreate .*\.adb|.*\.ads %{
    set-option window tabstop 3
    set-option window indentwidth 3

    set-option window makecmd "alr build"
}

hook global WinSetOption filetype=haskell %{
    set-option window tabstop 2
    set-option window indentwidth 2

    set-option window makecmd "cabal build"
}
hook global WinSetOption filetype=cabal %{
    set-option window makecmd "cabal build"
}

hook global WinSetOption filetype=rust %{
    set-option window makecmd "cargo build"
}
